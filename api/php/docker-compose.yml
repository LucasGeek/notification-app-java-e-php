services:
    # Serviço do Laravel App
    notification-app-php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: notification-app-php
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - APP_URL=http://localhost
            - DB_CONNECTION=pgsql
            - DB_HOST=postgres-php
            - DB_PORT=5432
            - DB_DATABASE=notification
            - DB_USERNAME=postgres
            - DB_PASSWORD=postgres
            - JWT_SECRET=n4N0jF2Ea0itn42muDVMRSi19GkdXZ9UAdlxDPvgdouTc6wushgaIyoIl7te1ijT
            - L5_SWAGGER_INFO_TITLE="API de Notificações em PHP"
            - L5_SWAGGER_INFO_DESCRIPTION="Documentação da API de Notificações em Laravel"
            - L5_SWAGGER_INFO_VERSION="1.0.0"
            - L5_SWAGGER_USE_ABSOLUTE_PATH=true
            - L5_SWAGGER_BASE_PATH="/api"
            - L5_SWAGGER_GENERATE_ALWAYS=true
            - L5_SWAGGER_CONST_HOST="http://127.0.0.1:8000"
            - L5_SWAGGER_OPERATIONS_SORT="alpha"
        volumes:
            - .:/var/www/html
        ports:
            - "8000:80"
        depends_on:
            - postgres-php
        networks:
            - notification-network
        command: sh -c "cd /var/www/html && composer install && php artisan migrate --force && apache2-foreground"

    # Serviço do PostgreSQL
    postgres-php:
        image: postgres:13-alpine
        container_name: postgres-php
        environment:
            POSTGRES_DB: notification
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
        networks:
            - notification-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
            interval: 30s
            timeout: 5s
            retries: 3

networks:
    notification-network:

volumes:
    postgres-data:
